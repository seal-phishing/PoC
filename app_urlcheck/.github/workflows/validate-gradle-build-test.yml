# This actions validates the gradle files and runs a build test to ensure the app is not corrupted
# if succeeded, and the source is a pull request, builds an evaluation apk
# Note: A different action will post a pr comment with the evaluation apk
name: Validate gradle build test

on:
  push:
    branches:
      - master
  pull_request:

# Cancel running actions if new commits are added
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# parameters
env:
  VARIANT: evaluation
  NAME: URLCheck_evaluation.apk
  RETENTION_DAYS: 14

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build & test
        run: ./gradlew build test

      # the following steps will only run for PRs

      - name: "[PR] Generate apk"
        if: github.event_name == 'pull_request'
        run: ./gradlew assemble${{ env.VARIANT }}

      - name: "[PR] Upload apk as artifact"
        id: artifact-upload-step
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          path: ./app/build/outputs/apk/${{ env.VARIANT }}/*.apk
          name: ${{ env.NAME }}
          retention-days: ${{ env.RETENTION_DAYS }}
          if-no-files-found: error
